#!/usr/bin/env bash

set -ue

MDR_SCHEMA_SQL="schema_meddra.sql"
MDR_DB="db/meddra.sqlite3"
MDR_DB_DUMP_GZ="db/dump_meddra.sql.gz"
MDR_TABLES=$(awk '$1 == "-" { print $2 }' table_list.yml)

echo "> checking required system commands."
which sed
which awk
which nkf
which sqlite3

if [[ ! ${#} -eq 0 ]]; then
  echo "> extracting files."
  if [[ ${#} -eq 1 ]]; then
    [[ -d raw/ ]] || mkdir raw/
    unzip ${1} -d raw/
  else
    echo "Invarid arguement." && exit 1
  fi
fi

echo "> checking files."
ls raw/*.asc
if [[ ! ${?} -eq 0 ]]; then
  echo "ASCII files not found." && exit 1
fi

echo "> creating the database."
if [ ! -f ${MDR_DB} ]; then
  [[ -d db/ ]] || mkdir db/
  cat ${MDR_SCHEMA_SQL} | sqlite3 ${MDR_DB}
  sqlite3 ${MDR_DB} '.tables'
fi

echo "> migrating the MedDRA data..."
[[ -d seed/ ]] || mkdir seed/
for t in ${MDR_TABLES[@]}; do
  echo ${t}
  nkf -w raw/${t}.asc | tr -d '\r' | sed -e 's/"/\\"/g' > seed/${t}.utf8  # to UTF-8
  if [[ ! ${t} =~ _j$ ]]; then
    sed -ie 's/\$$//g' seed/${t}.utf8 && rm seed/${t}.utf8e               # modify separaters (only MSSO files)
  fi
  sqlite3 -separator $ ${MDR_DB} ".import seed/${t}.utf8 ${t}"            # migrate
done

echo "> dumping the database..."
sqlite3 ${MDR_DB} '.dump' | gzip - > ${MDR_DB_DUMP_GZ}

echo "complete."
